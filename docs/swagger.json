{
    "swagger": "2.0",
    "info": {
        "description": "Реализация части сервиса авторизации с использованием JWT, access/refresh токенов",
        "title": "Go Auth Service",
        "contact": {}
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/guid": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение GUID текущего авторизованного пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Получить GUID",
                "responses": {
                    "200": {
                        "description": "Пример: {\"uuid\":\"16763be4-6022-406e-a950-fcd5018633ca\"}",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Пример: {\"error\":\"Invalid token format, token should have `Bearer ` prefix\"}",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Пример: {\"message\":\"failed to extract claims\"}",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Инвалидация текущих токенов пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Выход из системы",
                "responses": {
                    "200": {
                        "description": "Пример: {\"message\":\"Logout successfuly!\"}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Пример: {\"message\":\"access token not found\"}",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Пример: {\"message\":\"logout failed\"}",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновление пары токенов по refresh токену",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Обновить токены",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Tokens"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пример: {\"access_token\":\"eyJ...\",\"refresh_token\":\"bmV3IHJlZnJlc...\"}",
                        "schema": {
                            "$ref": "#/definitions/models.Tokens"
                        }
                    },
                    "403": {
                        "description": "Пример: {\"message\":\"wrong pair of tokens\"}",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Пример: {\"message\":\"error you changed user-agent content\"}",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Пример: {\"message\":\"token generation error\"}",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/token": {
            "get": {
                "description": "Получение access и refresh токенов. Если пользователя нет - он создается.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Получить пару токенов",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "16763be4-6022-406e-a950-fcd5018633ca",
                        "description": "User GUID",
                        "name": "guid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пример: {\"access_token\":\"eyJ...\",\"refresh_token\":\"bmV3IHJlZnJlc...\"}",
                        "schema": {
                            "$ref": "#/definitions/models.Tokens"
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Пример: Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9..."
                            }
                        }
                    },
                    "400": {
                        "description": "Пример: {\"message\":\"Wrong uuid input\",\"info\":\"you must enter a 36-character uuid\"}",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Пример: {\"message\":\"Database error\",\"error\":\"connection refused\"}",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "info": {
                    "type": "string",
                    "example": "additional info"
                },
                "message": {
                    "type": "string",
                    "example": "error description"
                }
            }
        },
        "models.Tokens": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}